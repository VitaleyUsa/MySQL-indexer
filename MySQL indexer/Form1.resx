<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAABsAAAAAAAAAAAAAAAAAAAAA
        AAASMykWMB0tMRMtMRMtMRMtMRMtMRMtMRMtMRMtMRMtMRMtMRMtMRMtMRMtMRMtMRMtMRMtMBMtMBMt
        MRMtMRMuMRMuMRQtMRMtMRMtMRMsMBMtMRMtMRMtMRMtMRMuMRMtMRMtMRMtMBMtMBMtMRMtMBMtMBMt
        MRMtMRMtMRMtMRMtMRMtMRMtMhMiJhEUKRbMzc1cbFc/QiE/QSA+QSA+QSA+QSA+QSA+QCA+QB8+Px8+
        QB8+QB8+Px8+Px8+Px8/Px4/Ph5APx5DQiBNTClWVTJXVTNOTixERCM/Px45Ox05Ox46PR4+Px9MSSRS
        TytQTy1IRyZBPR4/PR0+Ph4+Ph4/Ph4+Px4+QCA9QCA9QCA9QSA+QSBDPhs8MxEkJxH///+rqqFhYU9f
        YE9dXk5dX05bXk5aXU1bXExaWUpbWEhcWUpcV0ldVUdfU0VfUUNfT0JjUkJ9ZUqUe1m/q4/fzbTYxq+g
        lIFrXE5WQz09NzszNT0xOD9ZVkmhjXHTvqTZw6m8pZB+X1JkQzhhSz9fT0JhTkFdU0VZWUtYW0xZXE1Y
        XExaXExbTjJAQyEZKhn///+wsKZjYlBjY1BhYVBfYE9dX05cXk5bXU1bXExdWkpeWUpcWEleVEZfUUNi
        T0JiUEJ2YUmWeFKjh1+9qo/Zx7DUw62toY13alpZQDsuMTwlLz02OkBdXEuIgWvKuqLgya7TuZ2VemZm
        QjhjRjtiTEBhTkFdU0VZWktZXU1ZXU1bXU1cXk1eV0BFQSYZKhn///+ysKdmZVJlZFFjY1FiYlBhYVBf
        YE9dX05cXk5cXE1eWkteWEleVUdfVEZjVUZ0Yk2ggl2yjmGqkGqqnITCtJ7KuqTAsp2Mf25aRD8oMDwp
        MT1dVkhdX099e2m7rpnbxavYvJyqknluUURlRDpkST1hTUFeVUdaXExaXU1bXk5dX05gYU9iWUFGQicZ
        Khn///+zsqdqZ1NoZlJmZVJlZFFlZFFjY1FiYlBgYU9eYE9fXU1fW0tiW0tkWkttY0+ghWLLoG7Oo3Gv
        mHiUjHiRinepn4q5rZmMh3dQTUlNRUFiVkheXE1lZlWGg3C0qZTTv6XStpK6oH+KcV1pSz9kST1gUENd
        WElbXExbXk5eX09gYU9kY1FlXENIQycaKhn///+1s6htaVRraFRraFRqZ1RpZ1NnZlNnZlNmZVJkZFFi
        YlBjYE9mX05oYVGId13Gnm7aqXHNpXamlnuHgm99fm6OjoSOlJJkbXdYX2JOU1dQV1qEiH2Gh3uGg3Kn
        norFspnMrofRroSwl3t3YlNjTkJfU0ZeW0tdX05eX09gYU9lZFFoZlNqX0VKRSgaKxn///+3tKhxbVdx
        bVdva1ZualVtaVVsaVVtaVVsaVVsalZqaFVqZ1RtaFV3clyslXTWqnbWrXvBpoOkoJKkpqKiqa2Hmas9
        TGAgLD0gLD0fKTsoM0N7jKPAyc+wsqydloWqnIS/pIDWr4DMrIaUg25lVkhfWEpfXk5gYVBjY1FlZFFp
        Z1NualVvYUZNRikaKxn///+5tal2cFl1b1h1b1h0bllzbVhybVhybVhybVhybVhzbllyblh3cVyXinLC
        q4vRsInHsZKuq6ClqKWfq72EkqhVYnFRWWIsNUEdKDYdJzUfJCw0QVldb4nK1uO2ubeXkICtlnTWrXzc
        tIe1n4RzaVdjXE1iYVBkZFNoZlRraVZxbFZ2b1h1ZklQSCobKxn///+7t6p7c1t7clt5clp6clt6clt5
        clp5clt4cVt5clx3cVt4cluIf2i1pYvGuKS5sKCinpV5fYFueYaQl5/Z19b////9//+XrMgcJTMiLz+2
        xNXa1c6Zn6d3jKGgrbWuraS0qZbRr4bfuIrNtJWPg29qYVBrZVNraFVwbFdzblh6clt+dFx7akxSSisb
        Kxr///++uauCeGCDeGGBeGCAeGCBeGCAeGGBeGB/dl6Bd1+Ad2CBeF+UiXG7sJ6koZqMj4tRWWVHVmug
        p678/fr////y9PairLMpNEgOERcjKj2zwNT9/v///fmiwclykqNudXixraLJs53XuZbYv6KpnYh2bltx
        aVZybVh2cFt8dFyCd16He2CDcE9WTC0cLBr////BuqyRjnqRjnqRjnqRj3yRjnuSj3yRjHiIfGOJfWSI
        fWOGfWWaloWHlp0lOUUmOk00RV+dq7r7/f7///////95iKIHDyAWGiUiIzAfCQ0oHSilsb/2+/7V9v2q
        z91cbHxwdXiloZHEsprTwKe5q5WHgGp3cFt6c1yAdl6FemCKfGGRgWSNdlNaTy4dLBr////AuauMfWGN
        fmGNfmKMfmKNf2KNf2SNgGSUjHSWkXuYlICWlYu80NqZudQzT2sySF1nhp647Pzc9//2/f/+//84VYFT
        ZH8uO04iLj8nLDoNAAAfOmHm8PXq+f2YyNuCkqA3Q1ZhY2GsnojMu6TEtJ2WjHWAd2CEemGKfmOQgWWW
        hGadiWiWe1ZeUjAdLBr///+wr6WAc1iOfWCSgWOTgWSTgmWUhGaVhWeWhmmVh22RlJN/l7RPeap2pMWS
        0+VTeJJ5utmT4Pjv+//2/f/v+//A0Oaeudygvts1Q1gkLj0kKDR5jq7y+Pzt+v686/ppkqYqN0wiLj1n
        Yluvp5i+rZWekXmMgGePgmaUhGeaiGmijGurkm6hg1tkVTIeLRr///+qrKVfY1Vxa1aEdlqUgmOXhGaZ
        hWeah2mUh21tdHdFWXQpUHlFdqo/Z418steDsN5iveGJ4PrG8v/r+v7p+v/w8/dfaoQUHy8dJDIiKjty
        bX3r7vT6/P7s+/7Y9P1yuNEzTWMsQFg8cJGitcq8rpenmH6YiW2bimufjGynkG6wlnC5m3SriV9oWDQe
        LRv///+rraVhZFZhZVdiZlh0bVeHeFyXhGWWhGZiYmEwPk87SmIGDxcfP2gdQ09BdpZwl82P1PFy3v7C
        8P/Q9P/j+f/7+/2Qj58AAAAFBggsOFXK0+P////6/v/j9v7U8PuJ3PVxrcWJq76C0/adw+CvtLuyoISk
        kXOlkG+slHG1mnS+n3fGpHi2kGNsWjUfLhv///+srqdjZlhjZ1llaVtlaFtlaVtjX09gV0kXGRolKDcL
        DxIAAAAQESALFBEbLTkmOlNgpcl65//L9f/S9f/t+//////T2OEiLDwWHjCnts76/f/////w+v/T8Pq5
        7Pp+4PyQu9CKpb1WhKU7b5tRfrKbn6atl3aymXS7nnbEo3nMqHvRq32+lmVwXTcfLhv///+tr6hlaVtm
        alxna11na11oa15iZVkzNDAAAAAMCxAREBcAAAAGAQIEAgAIBwcHEBYbOklRkbmr6v/A9P/n/P/////k
        6O0cKUwxQF/o9f/////5/f/e9Pyw6/zB9f+Q3PldcIU7QUkQHCQGGCYMN15XbpGhn5u+oXvJpnzQq33W
        rn/bsYDEmWhyXjcfLhv///+usKloa15pbF9qbWBqbWBqbWBhY1caGRcMDQ8FCQ0REx0AAAADAAAFAgEA
        AAAHDBAGDhETJDJXjKyq3PPT8vz///+judcJDhw6Smbn8fz8///f8vrU9/+i4/94rNEzR1cWHSEJCQUA
        AAAAAAABDxoRGCI5RFGXiXHSrIDZsIDes4HitILJnWl0YDggLhv///+vsqpqbWBrbmFtcGRtcWRuc2hP
        bXMNGyQJDA4GCQwCAwYBAAAEAgEIBQQGBAQCAwUGCw4EBQgPHCpEcIVti6bD1Ow1VH0ICxAdKUDC1O3x
        ///L6val0exCaYwWKz4AAAAAAAAEBwUCAAAAAAAAAAEAAAANFhxbWU61kmvgtILkt4PnuYTMn2p1YDkg
        Lhv///+ws6ttcGNtcWRvcmZwdGp0i45iyuo/aIkDFSgAAAACAAABAQADAQEHBAMDAAAFChEEBQcBAQEE
        BQcECBAPHzE4RGIJCRgiExoLBxRVbY+FnLaht79DYXQAAhIAAAACAgEEBQUHDQsAAAAAAAAFCQ4AAAAA
        BgdLUE2QdVbRqHnouoXquYXOoGt1YTkgLhv///+ztK1wc2dxdWhydWludm9ki6Bw2/p1yPBOeqEMHDUA
        AAABAAAAAAACAwUXHSl9gogQGScIDBYXHioOERsGCQ0AAAAiBAY3Gh0PAAAACRkKFSQzNjQCBwUAAAAA
        AAAGCAcLCgkOEhICAgIAAAAJDBIHBgYQExU8TFGIdly7lmvquoXsu4bPoGx2YTkgLhv///+0tq9zdmp0
        d2t1eW1teXo7cZhzxuOD5f+r5v94lr0bJjcAAAAAAAAAAwUhLD3///+Vo7oHCxEgKTh1j7gAAA4EBAgf
        CQcqEAoLAQIAAAAICwwMFyYDBBQGBwsdIi8BBg0JBgMODg8EBAMBAAAFAQAPCQgTExMiOURmc3DMpHjs
        u4TruYLQoGp2YzsbLhz///+2t7B1eGx3em56fnJugIobXI1Zlr2s4vXP9//3//+Yrc0nNlMDCxgAAAAA
        AAC0tLT///9LUlqywNiInLwBBB8CAwoDAwgKAgMPExwEChQ5TmqVrMs2RV4GCA5MXXtscHoECQ8DAgID
        AQAEAQACAAAAAAAACBMhT2lEj7B3jY5yd2pwdGhvcmU7TkEJKSD///+3ubN4fHB6fnKBhHlvhJYhX4o2
        cpSbwtvz/P////////+/0+tVcJcYIjwAAAAAAADKycjj5OXj4uICAwUHCg8sMjwSHTAPFiMSHSggKjs3
        UHb8//9WV1cWFhaRnrTc29oSHjAAAAAAAAAAAAAEChMaJDs1WINmvudl2f5ho7l1e3JydWlwdGc8T0IJ
        KSD///+5u7V+gXWAg3iDh3x5jJgnapYkXn9DdarA1+39///////////z/P+cuN8lKSwSFx8BBAkSGR8i
        JzQsNEUnKzFYY3MjMkgcKT8vPk0YHyodJzeJmLXV19rr6+vh39wAAAADBgkAAgYGChAYHS5LZompv+K8
        5P+F5f9ny+1EkLd0gYF0eGtydmk9UEMJKSD///+8vbiDhnqFh3yGioCGk5MtbZwfWX4eQWlUcZzb5fH8
        /v/////////////z//+UrtQsPlkVGB8eJjUwOEO9v8G1ydoPHDIjMkiBjqJ2e4IkL0AWIDAaJTYGCQ0A
        AAAAAAANEBQmOVRUa4utvtrl8v////////+S0uxiqMs/gatyg4Z0d2tydmk9UEMJKSD///+/wLqGiX+J
        jIGKjoOQl5JDZIAYQWAYLkMSIT5Tb5zP3+76/P3+///////////////U5PmcrMU8Rlnf39/s8PU9TGgA
        AAAcJzqKlKT+//+Ei5cyQVkWHisbIiwNDg4ODg6Qq9DK3fn7///////+//71+f7d5fFkkbYfZ5tVlL10
        g4B1eGx0d2o9UEQJKSD////BwryLjoONkIaOkYePlZEcM0ceO1sPJj4OJDYQHDRLX4G1yOLs8/z////9
        /v/8/v7////////////////HztsGCBUAAAAWHixVZYD0+P3////v+P+ittOir8Du+f//////////////
        ///////8/v/I1+xSb5oBMGEcVYZulLJzfXV1eWx0d2o9UUQJKSD////DxL+QkoiSlIqTlo13gocDESAU
        Jz8RMU8NGykZICsMDRU4O0WDkKPZ4+/l7Pa/xM/Gx83a5PH8/P37+vpobnoGCAwAAgEBAQI1RF7u8/r/
        //7////////8/P3////////////////////5/P+8x9s6S3QVLlEGKkcmVYVtgYd3fHB1eWx0d2o9UUQJ
        KSD////Gx8KVl46XmZCVmZQ/XHULIDgPIz4TJ0ATHzAdNVIeLUMMBwYjJCdFSU+LjpBMTlAWFhhbeKPq
        8PqZrsMMDhcBAwUBCA0AAAAfLknh7PD////E1e99krDd6fb////////5///w9/3c5PCClLIlNFIVK0wK
        KEQLMVJBZYJze3V3e293em50d2s9UUQJKSD////IycWZm5KbnpWWoaYGKEcgM0NbeZ8XITYZKUMZMlIj
        PWYjNFQVHSwODxcNDxEFBQUAAAANGi09XYcYPGUBBw4DDhUACA8AAAAHHUCVsc/b6/84UHUsLzRzeobA
        y97Cz+HL0t2vtL81P1UZITgPL04HKUkGGi0cOFVWbHR4e3B6fnJ2em5zdmo9UUQJKSD////LzMefoZif
        opt9jJ4KHTR0iZmauOA0TnYZKEMjOlofOFwjRncYPmoaOmERLUoQFR8OCAgDBQcADSUEHjIVIScEDBIA
        AgQFBwYDDho7Sl5fg6sCBQxRUVE8PDyGipJMVWMcICUcHyoIJEYfO14XNE8MIDIOGisiKThhbGh5fXF5
        fHB1eG1zdmo9UEMJKSD////Nz8qjpp2XnJhBW3Q2UXOSnrZyirU6Un8XJz8hNlQjO2ApSngnUIUkTIMh
        R3gjPV4gM1AaLEQUGyskNUcgLj4GBwsBAAATHSUQGiAICRAHEyMABQccJCoZKjkZJjUXICwIHjUfP2YY
        PGkmRmoZLT8NGyoKGi4iLDl0enR6fXF3em50d2tydmk8UEMJKSD////Q0s2mqKGHjYwbL0ZIZYlZZY49
        THMQFiIGCxERIzoUJkEbNFssS3kvVowoTH8pSHAvTHUyUXsxRWM5S2gjNVYcIzUZGyghK0EyO04YIzMa
        KT4WL0obOVgfQ2gfOVsXL0wWMlQbNFQhP2MfNU8YKDseMEwOJjwTKDp2fnp5fHB2eW10d2pydWg8T0IJ
        KSD////T1NCnqaNyeH0TGS8xRmgrMlEfK0QAAAAAAAAEBg0bJzo4T2sxSm0xVIMwVIcuUoI6WIBBX4pB
        XoZMZIZCWX1HWXdMWndCVnhMX4I+Vnk0TnY8W4Q1XZMoUIUkQGcmRnEhPmQhN1cjPlsgNk8lOlZccZM0
        UGcJJj5uenx3e291eGxydWhwc2Y7TkEJKSD////W19OpqqVOWmwbHzAaJDYKCRAEChIBAQMPCxItLTZR
        YXdkfZU3VnsaOmQvTns1W5E4XZE7X5A/YI5PbZladZtadJdogaZYc5lJZpFLaY9CXoI/W4IsS3glSHcj
        QGgnSHQmQ2opQmYlO1kcLkY0WIduirBibXwQKERibXF1eG1zdmpwdGducmU6TUAJKR/////Z2daqrahJ
        WGoOEx4GCxAHBggQExcaICk6QlNec4xggKJbd5lSc5pTb5Zif6ZUcZ0+YJMvVIcqS3oqTYEyUoE+YIxE
        Y407VXotSW8xUXsvT3goRnEVMVcbNVkkPV0nQ2QXL0wZKkQlMUsdK0MtS3tJaJVjdJMgL0hSXGFxdWpw
        dGducmVsb2I5TD8JKR/////c3NmztrB7hIkPEh4AAQwkLT1CU2VDV25YfKNrkLRukLF0jauqtL+otb+k
        tMKWqsNwhqhac5Q0UXwcPmYQJ0oTK08LIUQKIUQOKEsUNWYZPXMiQXUlP2oNI0YVLU4/WXc0R1USHikO
        EiEUGyskMUwsQWlKZpkgL0c2QExqbmRucmVscGNqbmE4Sz0JKR/////e39zAwbyqrKpqb3gwQVpSdJJr
        iqpxiaB/oL6htsqrt76zu72/wLu9vri8vbe4u7ipsbWkrrh+kqxtgp1FUWcbJTglMUsxQ2FBWHhcb4p1
        hJqFlKmNnLBVa401WIdRcpppfY06SlMLEBkCBQsUGCMcHC8pPmgRIDgoMT9ma2NscGNqbmFobF43Sj0J
        KB/////g4d7Gx8LGx8K8vrybqrSUq7ijr7e0ubq9wsHDxb/CxL7Bw72/wbu9vri8vri6vLa4ubO1t7Cu
        srCpsLKWoq2Fj5mcqbWps7ustLetsrKtr6inq6OlqqSyur2ftMppiq5hhqtee5c8UWUbKDYAAAAPCA4X
        Hi8BCRRCS1NqbmNrb2Foa15malw2STwIKB/////h4uDHycTJysXJy8bJy8bJysXIycTHycTGx8LExcDD
        xb/Bw72/wbu+wLq8vbe6u7W2uLK0tq+ytK2usKmsrqeqrKSnqaGjpp2gopqdn5aZnJOWmY+TloyQkoig
        pJyksbaDpcJnkrVYfJxUa4cXISwSFyQKCxEAAAlkamtqbmFobF5maVxkaFo1SDoIKB/////i4uDJy8bK
        y8bLzMfJy8bJy8bJy8bIycTGx8LFx8LDxb/Bwr2/wLu9vri7vba4urS2uLK0ta+xs62tr6irraanqaGk
        pp6ho5qeoJibnZSYmpGUlo2RlIqNkIaKjYKGiX+Kj4aQoKduhJxYeqJpiK4bKDsQGigWHztvdXBobF5m
        aVxkaFpiZlczRjkIKB/////j4+HLzMfLzMfLzMfKy8bJy8bJysXIycTHycTFx8LDxb/Bwr2/wLu8vri6
        vLa4ubO0tq+ytK2vsaqsrqaoqqKmqKCipJyfoZibnpWYm5GUl42RlIqOkYeKjYOHin+DhnuAg3h9gHWB
        hXxpeopNXmo6QUExNjdob2xqbmJmalxkaFpiZldgZFUyRTgIKB/////j5OLLzMfLzMfLzMfJy8bJysXI
        ycTHyMPHyMPFxsHCxL7Bwr2/wLu8vbe5u7S2uLKzta6wsqutr6iqrKSnqaGjpp2gopqdn5aZm5KWmI+S
        lIqOkYeLjoOHin+Eh3yAg3h9gHR5fXF3em50d2pvdGdtcGNsb2Joa15malxkaFpiZldgZFVeYlMyRTgI
        KB7////j5OHLzcjLzMfKy8bJy8bJysXHyMPFx8LFxsHDxL/Bwr2/wbu9vri6u7W4ubO1t7Cxs6yusKir
        raWnqaGkpp6ho5qdoJeZnJOWmY+TloyPkoiLjoOHin+Eh3yAg3h9gHR5fHB3em50d2pwc2ZucWRrb2Fo
        bF5laVtjZ1lhZVdfY1VeYlNcYFEsPDEHIBr////w8O/j5OHj5OHi4+Hi4uDh4t/g4d7f4N3f4N3e39zd
        3tvc3dra29jZ2tbY2dXW19TV1tLT1NDR0s7P0MzNz8rLzcjJy8bHycTFx8LExcDCw77Awbu+v7q8vri6
        vLa5urS3ubK1t7C0tq6ytK2xs6yvsaqtr6isrqerraaqrKWqrKSqrKSoqqJxgnkHJx7/////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //////////////8IelUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>